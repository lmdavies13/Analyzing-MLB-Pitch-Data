---
title: "Analyzing MLB Pitch Trends"
format: html
editor: visual
---

Run 'quarto render 'Analyzing MLB Pitch Trends.qmd' --output-dir docs' to render docs

In this project we will analyze MLB pitch data from 2015-2018 to view trends in pitching performance using statistical analysis, predictive modeling, and classification techniques. Our goal is to develop models that predict variables like pitch speed while also implementing classification models to determine pitch type.This project will involve data cleaning, visualization, and model evaluation.

We will be using a dataset published on Kaggle titled “MLB Pitch Data (2015-2018),” which contains 8 different tables with information on pitches, at-bats, games, and players. Our focus will primarily be on the “pitches” table, which includes 2,867,154 pitch observations with 40 different attributes describing various aspects of each pitch. While most of the features are continuous variables measuring aspects like speed and rotation, categorical features such as pitch type provide opportunities for classification modeling. The dataset contains noise, including outlier pitches, missing values, and irrelevant features, which will require preprocessing before analysis. By leveraging this data, we aim to build predictive models to analyze pitch characteristics and gain deeper insights into pitching trends.

# 1. Load the Dataset & Inspect Structure

## 1.1 Load the CSV - First install any packages we will be using

```{r}
install.packages("corrplot", repos = "https://cloud.r-project.org")
install.packages("tidyverse", repos = "https://cloud.r-project.org")
```

#Load necessary libraries

#Read the dataset (CSV Format)

```{r}
library(tidyverse)

data_file <- "pitches.csv"

pitch_df <- read_csv(data_file)
```

#Check the structure of the dataset

```{r}
glimpse(pitch_df)
```

#Check for duplicates (if any)

```{r}
pitch_df %>% distinct() %>% count()
```

## Looking into the Pitch Table

Print the size of each table

```{r}
dim(pitch_df)
```

Take a look at the features

```{r}
str(pitch_df)
```

```{r}
summary(pitch_df)
```

EDA ( Exploratory Data Analysis)

Lets look at the categorical features and check their value counts

```{r}
table(pitch_df$pitch_type)
```

```{r}
table(pitch_df$type)
```

```{r}
table(pitch_df$code)
```

# 1.2 Identify the Questions the Analysis Aims to Answer:

-   How does pitch speed vary across different pitch types?

-   How does spin rate affect pitch outcome?

-   Do certain pitches produce certain pitching events (des)?

-   What is the most common pitch types used in different situations?

# 1.3 Compute Summary Statistics & Generate Basic Visualizations

```{r}
# Summary Statistics for key numeric columns
summary(pitch_df$spin_rate)
summary(pitch_df$start_speed)
```

Pitch Speed Distribution by Pitch Type

```{r}
library(ggplot2)

ggplot(pitch_df, aes(x=pitch_type, y= start_speed)) +
  geom_boxplot() +
  theme_minimal() +
  labs(title = "Pitch Speed Distribution by Pitch Type")
```

Distribution of Pitch Types

```{r}
ggplot(pitch_df, aes(x = pitch_type)) +
  geom_bar(fill = "steelblue") +
  theme_minimal() +
  labs(title = "Frequency of Different Pitch Types")
```

Distribution of Pitch Speeds

```{r}
ggplot(pitch_df, aes(x = start_speed)) +
  geom_density(fill = "blue", alpha = 0.5) +
  theme_minimal() +
  labs(title = "Density Plot of Pitch Speeds", x = "Pitch Speed (mph)", y = "Density")
```

Histograms for pitch speed, and spin rate

```{r}
ggplot(pitch_df, aes(x = start_speed)) +
  geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
  theme_minimal() +
  labs(title = "Distribution of Pitch Speeds", x = "Pitch Speed (mph)", y = "Count")

ggplot(pitch_df, aes(x = spin_rate)) +
  geom_histogram(binwidth = 50, fill = "darkorange", color = "black") +
  theme_minimal() +
  labs(title = "Distribution of Spin Rate", x = "Spin Rate (rpm)", y = "Count")
```

# 1. 4 Handling Missing Data

Check for missing values: find the NA's in each column

Check the number of NAs in each column

```{r}
# check for missing values
colSums(is.na(pitch_df))
```

Lets look and see what the percentage of NAs is per column

```{r}
# Check for the percentage of missing values 
colMeans(is.na(pitch_df)) * 100
```

# Deciding how to handle these:

Due to the percentage of missing values being so small in the dataset, we will just remove them all without further investigation

```{r}
# Remove rows with missing values 
na_rows <- apply(is.na(pitch_df), 1, any)
pitch_df <- pitch_df[!na_rows, ]
sum(is.na(pitch_df))
```

# 1.5 Identify & Handling Outliers

Outliers in Pitch Speed (start)

```{r}
ggplot(pitch_df, aes(y = start_speed)) +
  geom_boxplot(fill = "lightblue") +
  theme_minimal() +
  labs(title = "Boxplot of Pitch Speeds", y = "Pitch Speed (mph)")
```

(Ignore for the moment)

```{r}
#Detect outliers using IQR method

#Q1 <- quantile(pitch_df$start_speed, 0.25, na.rm = TRUE)
#Q3 <- quantile(pitch_df$start_speed, 0.75, na.rm = TRUE) IQR <- #Q3 - Q1

#Define lower and upper bounds

#lower_bound <- Q1 - 1.5 * IQR upper_bound <- Q3 + 1.5 * IQR

#Filter out extreme outliers

#pitch_df_clean <- pitch_df %>% filter(start_speed >= lower_bound & start_speed <= upper_bound)


```

# 1.6 Normalize or Scale Numerical Features (If Needed) - NO?

## Week :2/3 Correlation Analysis

We will create a correlation matrix among all numeric variables

```{r}
library(corrplot)

numeric_vars <- sapply(pitch_df, is.numeric)
numeric_data <- pitch_df[, numeric_vars]

corr_mat <- cor(numeric_data)

corrplot(
  corr_mat,
  method = "circle",
  type = "upper",
  order = "hclust", #hierachical clustering of vars
  tl.col = "black", #text color
  tl.cex = 0.7, # text size
  tl.srt = 45, #rotation
  col = colorRampPalette(c("navy", "white", "firebrick3"))(200) #Set a palette
)
  
```
